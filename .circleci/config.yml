version: 2.1

orbs:
  python: circleci/python@2.1.1
  python-lib: dialogue/python-lib@0.1.55

jobs:
  black:
    resource_class: small
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>

    steps:
      - checkout

      - restore_cache:
          name: Restore cached black venv
          keys:
            - v1-pypi-py-black-<< parameters.python-version >>

      - run:
          name: Update & Activate black venv
          command: |
            python -m venv env/
            . env/bin/activate
            python -m pip install --upgrade pip
            pip install black

      - save_cache:
          name: Save cached black venv
          paths:
            - "env/"
          key: v1-pypi-py-black-<< parameters.python-version >>

      - run:
          name: Black format check
          command: |
            . env/bin/activate
            python -m black --exclude '(env|venv|.eggs)' --check .

  build-and-test:
    resource_class: medium
    parallelism: 2
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>

    steps:
      - checkout

      - restore_cache:
          name: Restore cached venv
          keys:
            - v1-pypi-py<< parameters.python-version >>-{{ checksum "requirements.txt" }}
            - v1-pypi-py<< parameters.python-version >>

      - run:
          name: Update & Activate venv
          command: |
            python -m venv env/
            . env/bin/activate
            python -m pip install --upgrade pip
            pip install .

      - save_cache:
          name: Save cached venv
          paths:
            - "env/"
          key: v1-pypi-py<< parameters.python-version >>-{{ checksum "requirements/prod.txt" }}+{{ checksum "requirements/dev.txt" }}

      - run:
          name: Install openminers
          command: |
            . env/bin/activate
            pip install -e .

workflows:
  pr-requirements:
    jobs:
      - black:
          python-version: "3.8.12"
      - build-and-test:
          matrix:
            parameters:
              python-version: ["3.8.14", "3.9.13", "3.10.6"]